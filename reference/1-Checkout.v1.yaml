openapi: 3.0.0
info:
  title: WebCheckOut
  version: '1.0'
  description: "With WebCheckout your site gets a URL to which your user will be redirected to perform the transactional process. In this way, you avoid catching sensitive information and definition for an interface of payment process.\n\nWebcheckout API is based on REST, returns answers with JSON coding. To make use of this service it is necessary that your site connect using Version 1.2 of TLS.\n\nYou can use the WebCheckout API in test mode, which does not interact with banking networks. Depending on the endpoint used in the application determines whether it is in productive mode or in test mode.\n\n* Test mode: https://test.placetopay.com/redirection/api/session/\n* Productive mode: https://checkout.placetopay.com\n\n### Considerations:\n\n* The URL is needed where data will be sent by using post (endpoint) method.\n\n* JSON should be used for sending authentication parameters, payment information and control data.\n\n* Expiration time (expiration) must be a valid date in ISO 8601 format, indicates time limit that the user has to make payment and must be at least 5 minutes higher than current date.\n\n**Important**: The expiration is the maximum time given for the session, if a user does not perform the operation, the session is pending until expiration.\n\n* The return URL (Returnurl) is used to redirect the user once the operation is finished. It is recommended to sea data to the URL with which the site can identify the record for example: https://mysite.com/response/ireference}. \n\n* Configure a notification URL on your server using ports 80 or 443 and in case the payment is decline or approved,receive a notification by post as an asynchronous way.\n\n**Important**: This notification URL must be supplied to Placetopay for its configuration.\n\n### PROCESS OF INTEGRATION\n\n1. At the moment, user proceed with operation on your site, you must consume the createrequest method.\n2. If the request is processed correctly, the service creates a session and returns an answer:\n\n* `Requestid` identifier\n* `ProcessUrl` Processing Url\n\n3. Create a record in your system, it relates that record to the Requestid and grants a pending status.\n4.\tIt redirects the user to the processurl obtained in point 2.\n5.\tIn Web Checkout interface, the user going to make the payment or subscription process where the information must be filled to process payment.\n6.\tSubsequently, the user must select payment method which the purchase will be added by entering data from payment method.\n7.\tOnce user performs the process and click on \"Return to commerce\", it is sent to the Returnurl return URL (specified attribute when creating a\t operation).\n8.\tBack to commerce, with RequestiD registred you must consult placetopay the status of the session using the GetRequestInformation method.\n9.\tRun your business rule according to status obtained, to update status of it in your database.\n10.\tAsynchronously, Placetopay performs a notification, final status of a session, to your site.\n11.\tWe recommend implement a probe process to resolve those transactions that were not resolved at sections 7 and 9.\n\n**Checkout Web Interface Methods**\n\nWeb Service contains different methods where use request - response type operations are executed, these require for each one, income parameters that are used by data structures, which information is processed to subsequently return a response. \n \n If you want to run a method, you can quickly use any of them on the left and simulate it on  right side of documentation."
servers:
  - url: 'https://authe-ptp.herokuapp.com/'
    description: WebCheckOut authenticacion
  - url: 'https://test.placetopay.com/redirection/'
    description: 'WebCheckOut Pruebas_Redirección '
paths:
  '':
    post:
      summary: GetAutentication structure
      operationId: post-ERE
      responses:
        '200':
          description: OK
      tags:
        - Authentication
      description: |-
        Authentication to service must be sent on a AUTH object, which must contain the following

        **attributes**

        | Parameter | Description |
        |-----------|-------------|
        | Login | Site identifier. |
        | tranKey | transactional key, which consists of the following operation: Base64(SHA-1(nonce + seed + secretkey)). Nonce within operation is the original, that is, the one that is not in Base64. |
        | nonce | Random value for each Base64-encoded request. |
        | seed | Current date, which is generated in ISO 8601 format. |

        `Login and secretKey are provided by PlacetoPay`

        `This structure must be sent in each request made to the service`

        `The seed can't make a difference of more than 5 minutes.`

        **Errors**

        Web CheckOut service returns a response codes for failed authentication in message attribute of status object.

        | Code| Cause |
        |-----------|-------------|
        | 100 | UsernameToken not provided (Malformed Authorization Header). |
        | 101 | Site IDENTIFIER does not exist (Incorrect login or not in the environment). |
        | 102 | TranKey hash does not match (wrong or poorly formed Trankey). |
        | 103 | Seed date greater than 5 minutes |
        | 104 | Inactive site. |
        | 105 | Site expired. |
        | 106 | Expired credentials. |
        | 107 | UsernameToken wrong definition (Does not fulfill with WSSE header). |
        | 200 | Skip the SOAP authentication header. |
        |  10001 | Contact Support. |

        **Frequent errors**

        Error message `Authentication badly formed`

        It is presented when the system does not detect that Login, Trankey, Seed or Nonce is being sent in the AUTH structure sent, it can also be presented if these data are sent but incorrectly, without the Content-Type "Application / JSON" parameter " So the server interprets the request as text instead of a array data.

        Your servers require TLSv1.2 to receive the request, due to the PCI standard. Please check encryption and protocol used to connect to server. If you use Java, keep in mind that only versions after 8 have full support.

        SoapFault responds with the message  `Authentication Failed 103`

        Authentication process we reviewed Created field, this field must be in GMT time or local time using the zone time. If you get this answer, it is because your time is not accurate with real time. We only allow 5 minutes of difference between time. You can use NTP to maintain the precision of the clock.
        Keep in mind that base64 should be for RAW OUTPUT of SHA1 and according to all programming languages this may be required to configure this option, for example. In php base64_encode (Sha1 (..., true)) this parameter would return RAW OUTPUT for the `SHA1 algorithm.`

        On the right side of this site, can simulate generation of authentication required for each of requests made to Payment Gateway (WebCheckout), said method receives a login and trankey via POST request, internally processing is performed From the information to return a JSON structure that can be copied and stuck in other requests within AUTH object.

        It should be noted that this method is provided as an aid to generate the authentication structure of the requests and does not part of the webcheckout integration method

        URL Reference authentication:  https://placetopay.github.io/web-checkout-api-docs/?shell#autenticacion
    parameters: []
  api/session:
    parameters: []
    post:
      summary: CreateRequest Subscription
      operationId: postapi-session
      responses:
        '200':
          description: OK
      tags:
        - Create Request
  api/session/:
    post:
      summary: CreateRequest
      operationId: post-api-session
      responses:
        '200':
          description: OK
      tags:
        - Create Request
    parameters: []
  /api/session/:
    post:
      summary: Request Mix
      operationId: post-api-session
      responses:
        '200':
          description: OK
      tags:
        - Create Request
  /api/collect:
    post:
      summary: Collect Request
      operationId: post-api-collect
      responses:
        '200':
          description: OK
      tags:
        - Recurring payment
  /api/reverse:
    get:
      summary: Reverse payment
      tags:
        - Reverse payment
      responses: {}
      operationId: get-api-reverse
  /api/session/REQUEST_ID:
    get:
      summary: Request Information
      tags:
        - Request information
      responses: {}
      operationId: get-api-session-REQUEST_ID
      description: "With WebCheckout your site gets a URL to which your user will be redirected to perform the transactional process. In this way, you avoid catching sensitive information and definition for an interface of payment process.\nWebcheckout API is based on REST, returns answers with JSON coding. To make use of this service it is necessary that your site connect using Version 1.2 of TLS.\nYou can use the WebCheckout API in test mode, which does not interact with banking networks. Depending on the endpoint used in the application determines whether it is in productive mode or in test mode.\n•\tTest mode: https://test.placetopay.com/redirection/api/session/\n•\tProductive mode: https://checkout.placetopay.com\nConsiderations:\nThe URL is needed where data will be sent by using post (endpoint) method.\nJSON should be used for sending authentication parameters, payment information and control data.\nJSON should be used for sending authentication parameters, payment information and control data.\nImportant: The expiration is the maximum time given for the session, if a user does not perform the operation, the session is pending until expiration.\n\n* `The return URL (Returnurl) is used to redirect the user once the operation is finished. It is recommended to send a data to the URL with which the site can identify the record for example: https://mysite.com/response/ireference}`.\nConfigure a notification URL on your server using ports `80` or `443` and in case the payment is decline or approved, receive a notification by post as an asynchronous way`.\n\n**Important**: This notification URL must be supplied to Placetopay for its configuration.\n\n**PROCESS OF INTEGRATION**\n\n1. At the moment, user proceed with operation on your site, you must consume the createrequest method.\n2. If the request is processed correctly, the service creates a session and returns an answer:\n*  `Requestid` identifier\n* `ProcessURL` `Processing URL`.\n\n3. Create a record in your system, it relates that record to the `Requestid` and grants a pending status.\n4. It redirects the user to the `ProcessURL` obtained in point 2.\n5. In Web Checkout interface, the user going to make the payment or subscription process where the information must be filled to process payment.\n6. Subsequently, the user must select payment method which the purchase will be added by entering data from payment method.\n7.\tOnce user performs the process and click on \"Return to commerce\", it is sent to the Returnurl return URL (specified attribute when creating a\t operation).\n8.\tBack to commerce, with RequestiD registred you must consult placetopay the status of the session using the GetRequestInformation method.\n9.\tRun your business rule according to status obtained, to update status of it in your database.\n10.\tAsynchronously, Placetopay performs a notification, final status of a session, to your site.\n11.\tWe recommend implement a probe process to resolve those transactions that were not resolved at sections 7 and 9\n\n**Checkout Web Interface Methods**\n\nWeb Service contains different methods where use request - response type operations are executed, these require for each one, income parameters that are used by data structures, which information is processed to subsequently return a response. If you want to run a method, you can quickly use any of them on the left and simulate it on  right side of documentation.\n\n\n**Servers**\n\nWebCheckOut Authenticacion https://authe-ptp.herokuapp.com/\nWebCheckOut Redirection https://checkout.placetopay.ws/\nWebCheckOut Pruebas_Redirección https://test.placetopay.com/redirection/\n\n\n"
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
