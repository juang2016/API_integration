openapi: 3.0.0
info:
  title: WebCheckOut
  version: '1.0'
  description: "With WebCheckout your site gets a URL to which your user will be redirected to perform the transactional process. In this way, you avoid catching sensitive information and definition for an interface of payment process.\n\nWebcheckout API is based on REST, returns answers with JSON coding. To make use of this service it is necessary that your site connect using Version 1.2 of TLS.\n\nYou can use the WebCheckout API in test mode, which does not interact with banking networks. Depending on the endpoint used in the application determines whether it is in productive mode or in test mode.\n\n* Test mode: https://test.placetopay.com/redirection/api/session/\n* Productive mode: https://checkout.placetopay.com\n\n### Considerations:\n\n* The URL is needed where data will be sent by using post (endpoint) method.\n\n* JSON should be used for sending authentication parameters, payment information and control data.\n\n* Expiration time (expiration) must be a valid date in ISO 8601 format, indicates time limit that the user has to make payment and must be at least 5 minutes higher than current date.\n\n**Important**: The expiration is the maximum time given for the session, if a user does not perform the operation, the session is pending until expiration.\n\n* The return URL (Returnurl) is used to redirect the user once the operation is finished. It is recommended to sea data to the URL with which the site can identify the record for example: https://mysite.com/response/ireference}. \n\n* Configure a notification URL on your server using ports 80 or 443 and in case the payment is decline or approved,receive a notification by post as an asynchronous way.\n\n**Important**: This notification URL must be supplied to Placetopay for its configuration.\n\n### PROCESS OF INTEGRATION\n\n1. At the moment, user proceed with operation on your site, you must consume the createrequest method.\n2. If the request is processed correctly, the service creates a session and returns an answer:\n\n* `Requestid` identifier\n* `ProcessUrl` Processing Url\n\n3. Create a record in your system, it relates that record to the Requestid and grants a pending status.\n4.\tIt redirects the user to the processurl obtained in point 2.\n5.\tIn Web Checkout interface, the user going to make the payment or subscription process where the information must be filled to process payment.\n6.\tSubsequently, the user must select payment method which the purchase will be added by entering data from payment method.\n7.\tOnce user performs the process and click on \"Return to commerce\", it is sent to the Returnurl return URL (specified attribute when creating a\t operation).\n8.\tBack to commerce, with RequestiD registred you must consult placetopay the status of the session using the GetRequestInformation method.\n9.\tRun your business rule according to status obtained, to update status of it in your database.\n10.\tAsynchronously, Placetopay performs a notification, final status of a session, to your site.\n11.\tWe recommend implement a probe process to resolve those transactions that were not resolved at sections 7 and 9.\n\n**Checkout Web Interface Methods**\n\nWeb Service contains different methods where use request - response type operations are executed, these require for each one, income parameters that are used by data structures, which information is processed to subsequently return a response. \n \n If you want to run a method, you can quickly use any of them on the left and simulate it on  right side of documentation."
servers:
  - url: 'https://authe-ptp.herokuapp.com/'
    description: WebCheckOut authenticacion
  - url: 'https://test.placetopay.com/redirection/'
    description: 'WebCheckOut Pruebas_Redirecci√≥n '
paths:
  '':
    post:
      summary: GetAutentication structure
      operationId: post-ERE
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  login:
                    type: string
                  tranKey:
                    type: string
                  seed:
                    type: string
                  nonce:
                    type: string
      tags:
        - Authentication
      description: |-
        Authentication to service must be sent on a AUTH object, which must contain the following

        **attributes**

        | Parameter | Description |
        |-----------|-------------|
        | Login | Site identifier. |
        | tranKey | transactional key, which consists of the following operation: Base64(SHA-1(nonce + seed + secretkey)). Nonce within operation is the original, that is, the one that is not in Base64. |
        | nonce | Random value for each Base64-encoded request. |
        | seed | Current date, which is generated in ISO 8601 format. |

        `Login and secretKey are provided by PlacetoPay`

        `This structure must be sent in each request made to the service`

        `The seed can't make a difference of more than 5 minutes.`

        **Errors**

        Web CheckOut service returns a response codes for failed authentication in message attribute of status object.

        | Code| Cause |
        |-----------|-------------|
        | 100 | UsernameToken not provided (Malformed Authorization Header). |
        | 101 | Site IDENTIFIER does not exist (Incorrect login or not in the environment). |
        | 102 | TranKey hash does not match (wrong or poorly formed Trankey). |
        | 103 | Seed date greater than 5 minutes |
        | 104 | Inactive site. |
        | 105 | Site expired. |
        | 106 | Expired credentials. |
        | 107 | UsernameToken wrong definition (Does not fulfill with WSSE header). |
        | 200 | Skip the SOAP authentication header. |
        |  10001 | Contact Support. |

        **Frequent errors**

        Error message `Authentication badly formed`

        It is presented when the system does not detect that Login, Trankey, Seed or Nonce is being sent in the AUTH structure sent, it can also be presented if these data are sent but incorrectly, without the Content-Type "Application / JSON" parameter " So the server interprets the request as text instead of a array data.

        Your servers require TLSv1.2 to receive the request, due to the PCI standard. Please check encryption and protocol used to connect to server. If you use Java, keep in mind that only versions after 8 have full support.

        SoapFault responds with the message  `Authentication Failed 103`

        Authentication process we reviewed Created field, this field must be in GMT time or local time using the zone time. If you get this answer, it is because your time is not accurate with real time. We only allow 5 minutes of difference between time. You can use NTP to maintain the precision of the clock.
        Keep in mind that base64 should be for RAW OUTPUT of SHA1 and according to all programming languages this may be required to configure this option, for example. In php base64_encode (Sha1 (..., true)) this parameter would return RAW OUTPUT for the `SHA1 algorithm.`

        On the right side of this site, can simulate generation of authentication required for each of requests made to Payment Gateway (WebCheckout), said method receives a login and trankey via POST request, internally processing is performed From the information to return a JSON structure that can be copied and stuck in other requests within AUTH object.

        It should be noted that this method is provided as an aid to generate the authentication structure of the requests and does not part of the webcheckout integration method

        URL Reference authentication:  https://placetopay.github.io/web-checkout-api-docs/?shell#autenticacion
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                LOGIN:
                  type: string
                TRANK:
                  type: string
            examples:
              Authentication example:
                value:
                  LOGIN: 184053a1c182247d2f53964fdb109e00
                  TRANK: Q0nj0QeRN0h1EH3H
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          required: true
    parameters: []
  api/session:
    parameters: []
    post:
      summary: CreateRequest Subscription
      operationId: postapi-session
      responses:
        '200':
          description: OK
      tags:
        - Create Request
      description: |
        The subscription allows you to securely store (tokenized) a user's payment method, so that they can then make charges related to it. To make use of this functionality it is necessary to send  subscription structure in the RedirectRequest, which requests the creation of the session (subscription request) and returns the ID and process URL.

        Structure used for the subscription payment method.

        * SubscriptionResponse
        * CollectRequest
        * NameValuePair
        * Token
        * Person
        * Instrument

        **It is recommended to charge a minimum value to identify that the card is active**.

        **Token information must be stored on your site, related to the user and/or product. After you have the token, you can generate charges to the tokenized payment method using the collect method**.

        The response structure contains all the information from the original request and a subscription structure with an instrument (instrument) represented in the form of a token.

        You can simulate the operation taking the following example, placing your authentication on the right side of the page.
  api/session/:
    post:
      summary: CreateRequest
      operationId: post-api-session
      responses:
        '200':
          description: |
            The service responds to an instance of the `RedirectResponse`class. By checking the status of the response, you can determine whether the payment session was created.

            | Parameter | Type | Description |
            |-----------|------|-------------|
            | Status | Status | Structure containing the status of the payment request |
            | requestId | Int | One-time payment session reference |
            | processUrl | String | URL where the user is redirected to complete the payment process. |
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      tags:
        - Create Request
      description: |
        This method allows creation of payment session (`CreateRequest`) which requests a creation of session (collection request) and returns the ID and processing URL.

        You can simulate process considering the following example, filling authentication and example on the right side of the page.
    parameters: []
  /api/session/:
    post:
      summary: Request Mix
      operationId: post-api-session
      responses:
        '200':
          description: OK
      tags:
        - Create Request
      description: |-
        Mixed payment allows you to use multiple payment methods at the time of payment for same session.

        To make use of this functionality, in the payment structure of Payment it is necessary to send the `allowPartial` attribute as: True, additional must be requested in PlacetoPay to enable such functionality in administrative panel.

        **Additional states of a mixed payment session**

        When obtaining the result of the trade, you should keep in mind following two states, since these must be controlling by trade, if user does not finish  payment it must be determined to do if it is reversed or another procedure is done:

        **APPROVED_PARTIAL**: Indicates that at least one approved payment is made but the full session payment is not made.
        **PARTIAL_EXPIRED**: Indicates that at least one approved payment is made but the full session payment has not been completed and the session has expired.

        `It is important to identify according to the site's business rule when obtaining either of these two states`.

        `For mixed payments there are also the other statuses of a normal approved, REJECTED, PENDING, FAILED transaction`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                auth:
                  type: object
                  properties:
                    login:
                      type: string
                    tranKey:
                      type: string
                    nonce:
                      type: string
                    seed:
                      type: string
                payment:
                  type: object
                  properties:
                    reference:
                      type: string
                    description:
                      type: string
                    amount:
                      type: object
                      properties:
                        currency:
                          type: string
                        total:
                          type: number
                    allowPartial:
                      type: boolean
                expiration:
                  type: string
                returnUrl:
                  type: string
                ipAddress:
                  type: string
                userAgent:
                  type: string
            examples:
              example:
                value:
                  auth:
                    login: usuarioprueba
                    tranKey: jsHJzM3+XG754wXh+aBvi70D9/4=
                    nonce: TTJSa05UVmtNR000TlRrM1pqQTRNV1EREprWkRVMU9EZz0=
                    seed: '2019-04-25T18:17:23-04:00'
                  payment:
                    reference: '3210'
                    description: Pago mixto de prueba
                    amount:
                      currency: COP
                      total: '10000'
                    allowPartial: true
                  expiration: '2019-03-05T00:00:00-05:00'
                  returnUrl: 'https://mysite.com/response/3210'
                  ipAddress: 127.0.0.1
                  userAgent: PlacetoPay Sandbox
  /api/collect:
    post:
      summary: Collect Request
      operationId: post-api-collect
      responses:
        '200':
          description: OK
      tags:
        - Recurring payment
      description: |-
        It allows to make collections without the intervention of user using pre-subscribed means of payment, considering periodicity agreed with customer at time of subscription from payment method.

        **Attributes**

        | Parameter | Type | Description |
        |-----------|------|-------------|
        | Payer **Required** | Person | Data of the holder of stored payment method. |
        | payment **Required** | PaymentRequest | An object that contains payment structure when you need to request a payment. |
        | instrument **Required** | Instrument | Data associated with subscribed payment method. |
  /api/reverse:
    post:
      summary: Reverse payment
      operationId: post-api-reverse
      responses:
        '200':
          description: |
            Service that responds to an instance of the class `ReverseResponse`. You can check the session status through:

            **Response structure to a reversed payment request**

            `response.IsSuccessful() // return boolean`

            `response.Status.status // return boolean`

            **STATUS**

            Attributes

            | Parameter | Type | Description |
            |-----------|------|-------------|
            | status **Required** | String(32) | Petition or payment status. |
            | reason **Required** | String | Code of the provided reason. |
            | message **Required** | String | Reason code description. |
            | date **String** | DateTime | Date and time that the payment status is generated.  |

            **Petition or payment status:**

            **OK**: Authentication request processed successfully.
            **FAILED**: Authentication request failed.
            **APPROVED**: Payment petition or suscription finished.

            | Parameter | Type | Description |
            |-----------|------|-------------|
            | internalReference **Optional** | int | Internal reference in Placetopay. |
            | reference **Optional** | string | Reference sent by the merchant for the transaction. |
            | paymentMethod **Optional** | string | Code of the payment method used. |
            | paymentMethodName **Optional** |string  | Name of the payment method used. |
            | issuerName **Optional** | string | Name of the isuer or processor. |
            | amount **Optional** | AmountConversion | Processed value. |
            | receipt **Optional** | string  | Transaction receipt number. |
            | franchise **Optional** | string  | Franchise of the card used.  |
            | refunded **Optional**  | boolean |  |
            | authorization **Optional** | string | C√≥digo de autorizaci√≥n. |
            | processorFields **Optional** | NameValuePair[] | Campos adicionales del procesador. |
      description: 'Allows to revert an aproved payment with the internal reference code, this transaction must have been made at night before 8 o‚Äôclock, since due to restrictions in the banking networks if this payment is made after this hour it may not be completed.'
      tags:
        - Reverse payment
  /api/session/REQUEST_ID:
    post:
      summary: Request Information
      operationId: post-api-session-REQUEST_ID
      responses:
        '200':
          description: |
            The transaction response must contain different objects:
            * status
            * request
            * fields

            Estructure that contains the response information of a request or payment,it informs you the current status of itself.

            **STATUS**

            **Atributes**

            | Parameter | Type | Description|
            |-----------|------|-------------|
            | status **Required** | String(32) | Petition or payment status. |
            | reason **Required** | String | Code of the provided reason. |
            | message **Required** | String | Reason code description. |
            | date **String** | DateTime | Date and time that the payment status is generated. |

            **Petition or payment status**

            **OK**: Authentication request processed successfully.
            **FAILED**: Authentication request failed.
            **APPROVED**: Payment petition or suscription finished.
            **APROVED_PARTIAL**: If partially allowed, a transaction has been approved, but an amount still remains.
            **PARTIAL_EXPIRED**: When there is a partial approved payment, but the session has expired.
            **REJECTED**: The transaction has been declined.
            **PENDING**: Pending transaction for the session, must be locked until resolution.
            **PENDING_VALIDATION**: The session is pending of user identity validation.
            **REFUNDED**: Transaction refund at a request of a cardholder to the merchant. 

            **REQUEST**

            Structure that contains all the transaction information to be processed

            | Parameter| Type| Description|
            |-----------|------|-------------|
            | locale **Optional** | string | Defined with the codes ISO 631-1 (language) and ISO 3166-1 alpha-2 (2-country letters).ex. en_US, es_CO |
            | payer **Optional** | Person | Payer information, if set this objetc, the payer‚Äôs data will use this information. |
            | buyer **Optional** | Person | Buyer information in the transaction. |
            | payment **Optional** | PaymentRequest | Payment object when you need to request a charge. |
            | subscription **Optional** | SubscriptionRequest | Suscription object used when you need a token. |
            | paymentMethod **Optional** | string | Force the payment method in the redirection interface, the accepted codes are those in the list, if you need more than one, separate them with a coma ex. ATH,PSE,CR_VS |
            | expiration **Required** | dateTime | Expiration date, the user must to finish the process before this time |
            | returnUrl **Required** | String | Return URL is used to redirect once the payment operation finished. |
            | cancelUrl **Optional** | string | URL to return when the user aborts the operation. |
            | ipAddress **Required** | string | User‚Äôs IP address. |
            | userAgent **Required** | string | User‚Äôs agent used. |
            | skipResult **Optional** | bool | If the parameter is sent on true, the result screen is omitted and once the payment is approved, it returns to the store. |
            | BuyerFill **Optional** | bool | By default, the data requested in redirection is filled with those of the buyer sent, if it is sent as true this automatic autocompletion is omitted. |

            **FIELDS**

            | Parameter| Type| Description|
            |-----------|------|-------------|
            | keyword **Optional** | string | Key for the pair of data values. |
            | value **Optional** | string | Value for the data pair. |
            | displayOn **Optional** | string | Under what circumstances should the field be displayed in the redirection interface (none, payment, receipt, both, approved.) |
      description: |
        Obtains the information of the session and transactions caried out.
        Information query of a transaction can be given when the user is returned to your site or by a schedule task that daily executes a script in wich all pending operations on your site are consulted.
        Recomendation: Implement both alternatives in your site, because if something fails in the return and notification process, the schedule task can be used as a contingency.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
        description: |-
          To consult the session you must send the session unique identifier requestId, using the `GetRequestInformation` method.

          `For this consumption it is also necessary to send the authentication in the request`.
      tags:
        - Request information
components:
  schemas: {}
